.all-levels
  &__cards
    display: grid
    @include grid-cols-gap-width(repeat(5, 1fr), 1rem, 1.5rem, 90%)
    margin: 0 auto
    //@include grid-cols-rows-cgap-rgap(repeat(5, 1fr), repeat(2, 1fr), 1rem, 1.5rem)
  &-cards__back
    background-color: $black-colour
    @include white-border
    /* Para que luego rote también su hijo, el div con la foto */
    transform-style: preserve-3d
    //backface-visibility: hidden
    transition: 1s
  &-cards-back__image
    position: absolute
    left: 50%
    top: 50%
    margin-left: -10%
    margin-top: -10%
    width: 20%
  &-cards__front
    width: 100%
    height: 100%
    transform: rotateY(180deg)
    /* Para que no se sigan viendo giradas */
    backface-visibility: hidden
  &-cards-front__image
    border-radius: .8rem
    box-sizing: border-box
    /* Para que funcione el object fit */
    height: 100%
    object-fit: cover
    transition: 1s

/* Añadir esta clase para girar la tarjeta */
.all-levels-cards__back--turn
  transform: rotateY(-180deg)

/* Añadir estas clases para ocultar las tarjetas emparejadas */
.all-levels-cards__back--hidden
  backface-visibility: hidden

.all-levels-cards-front__image--opacity
  opacity: 0.6

/* Añadir estas dos clases para cambiar el color de fondo del reverso */
.all-levels-cards__back--colour-change
  background-color: $grey-colour

.all-levels-cards__back--another-colour-change
  background-color: $transparent-white

/* Añadir estas dos clases para cambiar el grid */
.all-levels__cards--grid2
  @include grid-cols-gap-width(repeat(4, 1fr), 3rem, .5rem, 66%)
  /* En este caso necesitamos definir también las filas para que todas tengan la misma anchura */
  grid-template-rows: repeat(4, 1fr)

.all-levels__cards--grid3
  @include grid-cols-gap-width(repeat(5, 1fr), 1.6rem, .8rem, 80%)